{"version":3,"sources":["components/sunrise.js","App.js","reportWebVitals.js","index.js"],"names":["Sunrise","require","React","useState","lat","setLat","long","setLong","handleCoordinates","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","err","warn","code","message","onClick","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAIA,SAASA,IACOC,EAAQ,IAAtB,IAEA,EAAsBC,IAAMC,SAAS,GAArC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBH,IAAMC,SAAS,GAAvC,mBAAOG,EAAP,KAAaC,EAAb,KACMC,EAAoB,WACxBC,UAAUC,YAAYC,oBAAmB,SAACC,GACxCC,QAAQC,IAAIF,EAASG,OAAOC,SAAUJ,EAASG,OAAOE,WACtDZ,EAAOO,EAASG,OAAOC,UACvBT,EAAQK,EAASG,OAAOE,eAU5B,OAFAR,UAAUC,YAAYC,mBAAmBH,GAJzC,SAAiBU,GACfL,QAAQM,KAAR,gBAAsBD,EAAIE,KAA1B,cAAoCF,EAAIG,aAMxC,gCACE,wBAAQC,QAASd,EAAjB,wCACA,yCAAYJ,KACZ,0CAAaE,QCdJiB,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAACxB,EAAD,OCISyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9df07c66.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nfunction Sunrise() {\n  var SunCalc = require(\"suncalc\");\n\n  const [lat, setLat] = React.useState(0);\n  const [long, setLong] = React.useState(0);\n  const handleCoordinates = () => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      console.log(position.coords.latitude, position.coords.longitude);\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n  };\n\n  function onError(err) {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n  }\n\n  navigator.geolocation.getCurrentPosition(handleCoordinates, onError);\n\n  return (\n    <div>\n      <button onClick={handleCoordinates}>Get Latitude and Longitude</button>\n      <p>Lat is: {lat}</p>\n      <p>Long is: {long}</p>\n    </div>\n  );\n}\n\nexport { Sunrise };\n\n// Simulate a location service\n","/* eslint-disable no-unused-vars */\n\nimport './App.css';\nimport {Sunrise} from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sunrise/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}