{"version":3,"sources":["components/sunrise.js","App.js","reportWebVitals.js","index.js"],"names":["Sunrise","SunCalc","require","useState","zip_code","setZipCode","Date","toISOString","slice","date","setDate","dateTime","setDateTime","rise","set","sun","setSun","porsi","setPorsi","show","setShow","validate","setValidate","getSunTimes","temp_sun","getTimes","sunrise","moment","toTimeString","format","sunset","sunset_military","daylight","diff","minToAdd","parseInt","final_time","add","submitZip","e","a","form","currentTarget","checkValidity","preventDefault","stopPropagation","console","log","className","Typography","variant","align","Divider","Form","noValidate","validated","onSubmit","Group","Label","Control","type","required","value","isValid","length","onChange","target","Feedback","Button","style","margin","Paper","elevation","Row","Col","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac8d336c.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport { Paper, Typography, Divider } from \"@material-ui/core\";\nimport style from \"bootstrap/dist/css/bootstrap.css\";\nimport \"./style.css\";\n\nfunction Sunrise() {\n  var SunCalc = require(\"suncalc\");\n\n  const [zip_code, setZipCode] = useState(\"08823\");\n  const [date, setDate] = useState(new Date().toISOString().slice(0, 10));\n  const [dateTime, setDateTime] = useState((new Date().toISOString().slice(0, 10))+'T12:00:00');\n  const [sun, setSun] = useState({ rise: \"\", set: \"\" });\n  const [porsi, setPorsi] = useState();\n  const [show, setShow] = useState(false);\n  const [validate, setValidate] = useState(false);\n  const handleChangeZip = (e) => {\n    setZipCode(e.target.value);\n  };\n\n  const handleChangeDate = (e) => {\n    setDate(e.target.value);\n    setDateTime(`${e.target.value}T12:00:00`);\n  };\n\n  const getSunTimes = () => {\n    // const response = await fetch(\n    //   `https://maps.googleapis.com/maps/api/geocode/json?components=postal_code:${zip_code}%20&key=AIzaSyCItqD_bz3EaNVbnFP7aXzr_Thj0slENpU`\n    // );\n    // const payload = await response.json();\n\n    // var temp_lat = payload.results[0].geometry.location.lat;\n    // var temp_long = payload.results[0].geometry.location.lng;\n\n    const temp_lat = 40.435471;\n    const temp_long = -74.555847;\n\n    var temp_sun = SunCalc.getTimes(new Date(dateTime), temp_lat, temp_long);\n\n    const sunrise = moment(temp_sun.sunrise.toTimeString(), \"HH:mm:ss \").format(\n      \"h:mm A\"\n    );\n\n    const sunset = moment(temp_sun.sunset.toTimeString(), \"HH:mm:ss \").format(\n      \"h:mm A\"\n    );\n    const sunset_military = moment(\n      temp_sun.sunset.toTimeString(),\n      \"HH:mm:ss \"\n    ).format(\"HH:mm\");\n\n    const daylight = moment(sunrise, \"h:mm A\").diff(\n      moment(sunset_military, \"H:mm\"),\n      \"minutes\"\n    );\n    const minToAdd = (parseInt(daylight) * -1) / 4;\n    const final_time = moment(sunrise, \"h:mm A\")\n      .add(minToAdd, \"minutes\")\n      .format(\"h:mm A\");\n    setPorsi(final_time);\n\n    setSun({\n      rise: sunrise,\n      set: sunset,\n    });\n  };\n\n  const submitZip = async (e) => {\n    \n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n      console.log(\"test\");\n    }\n    if (form.checkValidity() === true) {\n      e.preventDefault();\n      getSunTimes();\n      setShow(true);\n    }\n\n    \n    setValidate(true);\n  };\n\n  return (\n    <div>\n      <div className=\"header\">\n        <Typography variant=\"h2\" align=\"center\">\n          Porsi Calculater\n        </Typography>\n      </div>\n      <Divider />\n      <br />\n      <Form noValidate validated={validate} onSubmit={submitZip}>\n        <Form.Group className=\"input-row\">\n          <Form.Label>Zip Code</Form.Label>\n          <Form.Control\n            type=\"number\"\n            required\n            value={zip_code}\n            isValid={zip_code.length !== 0}\n            onChange={handleChangeZip}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Zip Code Required\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"input-row\">\n          <Form.Label>Date</Form.Label>\n          <Form.Control\n            type=\"date\"\n            required\n            isValid={date ? date.length !== 0 : false}\n            value={date}\n            onChange={handleChangeDate}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Date Required\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\" style={{ margin: 10 }}>\n          Submit\n        </Button>\n      </Form>\n\n      {show ? (\n        <>\n          <Paper elevation={3} className=\"paper\">\n            <Row className=\"row\">\n              <Col>\n                <Typography variant=\"h5\">Sunrise:</Typography>\n              </Col>\n              <Col>\n                <Typography variant=\"body1\">{sun.rise}</Typography>\n              </Col>\n            </Row>\n            <Row className=\"row\">\n              <Col>\n                <Typography variant=\"h5\">Sunset:</Typography>\n              </Col>\n              <Col>\n                <Typography variant=\"body1\">{sun.set}</Typography>\n              </Col>\n            </Row>\n            <Row className=\"row\">\n              <Col>\n                <Typography variant=\"h5\">PORSI:</Typography>\n              </Col>\n              <Col>\n                <Typography variant=\"body1\">{porsi}</Typography>\n              </Col>\n            </Row>\n          </Paper>\n        </>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n\nexport { Sunrise };\n\n// Simulate a location service\n","/* eslint-disable no-unused-vars */\n\nimport './App.css';\nimport {Sunrise} from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sunrise/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}